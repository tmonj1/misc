apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  labels:
    app: app1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
        - name: app1
          image: ${AWS_ECR_URL}/tmj/x-ray-demo-app1:0.2
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            # for X-Ray daemonset
            # - name: AWS_XRAY_DAEMON_ADDRESS
            #   value: xray-service.amazon-cloudwatch
            # for X-Ray with App Mesh (not sure this is necessary or not)
            - name: ENABLE_ENVOY_XRAY_TRACING
              value: 1
          readinessProbe:
            httpGet:
              port: 80
              path: /health
            initialDelaySeconds: 15
            periodSeconds: 30
          livenessProbe:
            httpGet:
              port: 80
              path: /health
            initialDelaySeconds: 30
            periodSeconds: 30
          #          resources:
          #            requests:
          #              cpu: 100m
          #              memory: 512Mi
          #            limits:
          #              cpu: 250m
          #              memory: 768Mi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 2"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  labels:
    app: app2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
        - name: app2
          image: ${AWS_ECR_URL}/tmj/x-ray-demo-app2:0.2
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            # for X-Ray daemonset
            # - name: AWS_XRAY_DAEMON_ADDRESS
            #   value: xray-service.amazon-cloudwatch
            # for X-Ray with App Mesh (not sure this is necessary or not)
            - name: ENABLE_ENVOY_XRAY_TRACING
              value: 1
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
          readinessProbe:
            httpGet:
              port: 5000
              path: /health
            initialDelaySeconds: 15
            periodSeconds: 30
          livenessProbe:
            httpGet:
              port: 5000
              path: /health
            initialDelaySeconds: 30
            periodSeconds: 30
          #          resources:
          #            requests:
          #              cpu: 100m
          #              memory: 512Mi
          #            limits:
          #              cpu: 250m
          #              memory: 768Mi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 2"]
